/**
 * Detect if DOM has fully loaded
 * @param {Function} callback - The function to run after DOM loaded
 */
const ready = (callback) => {
	if (document.readyState != "loading") callback();
	else document.addEventListener("DOMContentLoaded", callback);
};

/**
 * Wrapper of fetch to be used with crsf token, generated by django
 * @param {String} url - Target URL
 * @return {JSON} - Requset params
 */
const dCall = async (url = "", data = {}, method = "POST") => {
	// Default options are marked with *
	let options = {
		method: method,
	};
	if (method != "GET" && method != "HEAD") options["body"] = JSON.stringify(data);

	if ((method = "POST")) {
		options.mode = "cors";
		options.headers = {
			"X-CSRFToken": document.querySelector("[name=csrfmiddlewaretoken]").value,
		};
	}
	const response = await fetch(url, options);
	if (response.ok) {
		return response.json();
	} else {
		throw new Error("Something went wrong ...");
	}
};

/**
 * Create simple notification message
 * @param {String} msg - The message to display
 * @param {type} msg - Type of mesage to style: success, warning, info, danger, dark
 */
const notify = (msg, type = "success") => {
	// Get the container for notifications to display
	let notifyArea = document.querySelector("#notify");
	// If not existed, create it
	if (!notifyArea) {
		notifyArea = document.createElement("div");
		notifyArea.setAttribute("id", "notify");
		notifyArea.classList.add("notify");
		// In-line styling
		notifyArea.style.position = "fixed";
		notifyArea.style.top = "5%";
		notifyArea.style.left = "40%";
		notifyArea.style.width = "20%";
	}
	// Create individual notification element
	let noti = document.createElement("div");
	noti.classList.add("alert", `alert-${type}`);
	noti.innerHTML = `${msg}<button type="button" class="close close-btn" aria-label="Close"><span aria-hidden="true">&times;</span></button>`;
	// Append to the container
	notifyArea.appendChild(noti);
	// Append the container to the body tag
	document.querySelector("body").appendChild(notifyArea);
	// Handle closing button for messages
	document.querySelectorAll(".close-btn").forEach((btn) => {
		btn.addEventListener("click", () => {
			btn.parentElement.classList.add("animate__animated", "animate__fadeOut");
			btn.parentElement.addEventListener("animationend", () => btn.parentElement.remove());
		});
	});
	// Auto diminish after 2 seconds with effect
	setTimeout(() => {
		noti.classList.add("animate__animated", "animate__fadeOut");
		noti.addEventListener("animationend", () => noti.remove());
	}, 2000);
};

ready(() => {
	// Handle closing button for messages
	document.querySelectorAll(".close-btn").forEach((btn) => {
		btn.addEventListener("click", () => {
			btn.parentElement.classList.add("animate__animated", "animate__fadeOut");
			btn.parentElement.addEventListener("animationend", () => btn.parentElement.remove());
		});
	});
});
